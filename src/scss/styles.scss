@mixin respond-at($media) {
  @media only screen and (min-width: $media) {
    @content;
  }
}

$bp-xsmall: 600px;
$bp-small: 780px;
$bp-med: 1060px;
$bp-large: 1400px;
$bp-xlarge: 1925px;

// $cardColor1: #d2beb3;
// $cardColor2: #7bb6d0;
// $cardColor3: #bbb7b6;
// $cardColor4: #7cb2c9;
// $cardColor5: #c5b9ad;
// $cardColor6: #a5bbc4;

// $cardColor1: #d2beb3;
// $cardColor2: #659bb3;
// $cardColor3: #bbb7b6;
// $cardColor4: #5596b2;
// $cardColor5: #c5b9ad;
// $cardColor6: #8ca0a9;

$cardColor1: #83f1ff;
$cardColor2: #b48fe8;
$cardColor3: #ff98a1;
$cardColor4: #7ad19c;
$cardColor5: #ffef67;
$cardColor6: #ffac67;

$text-screen-min-width: 1000px;
$text-screen-max-width: 1950px;

$fluid-type-extra-large-size--max: 22px;
$fluid-type-extra-large-size--min: 18px;
$fluid-type-large-size--max: 19px;
$fluid-type-large-size--min: 16px;
$fluid-type-med-size--max: 16px;
$fluid-type-med-size--min: 12px;
$fluid-type-med-small-size--max: 14px;
$fluid-type-med-small-size--min: 10px;
$fluid-type-small-size--max: 12px;
$fluid-type-small-size--min: 10px;
$fluid-type-smallest-size--max: 10px;
$fluid-type-smallest-size--min: 8px;

/* Fluid Typography Mixin - Resizes text based on screen size */

/* Mixin from: https://css-tricks.com/snippets/css/fluid-typography/ */

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

/* Example of Fluid Type Mixin:
 @include fluid-type(
    $text-screen-min-width, <- leave the first two values as-is
    $text-screen-max-width,
    $fluid-type-large-size--min, <- choose the variable that corresponds to the type of text being sized
    $fluid-type-large-size--max
  );
*/

@import "partials/reset";
@import "partials/icons";
@import "partials/typography";
@import "partials/nameImage";
@import "partials/nav";
@import "partials/utility";
@import "partials/homepage_main";
@import "partials/projects";
@import "partials/contact";
@import "partials/about";
@import "partials/footer";
@import "partials/blog";

body {
}

main {
}

h1 {
  font-size: 1.5em;
  &::first-letter {
    text-transform: capitalize;
  }
  @include respond-at($bp-med) {
    font-size: 2em;
  }
  @include respond-at($bp-large) {
    font-size: 4em;
  }
  font-weight: normal;
}

.pageHeading {
  text-align: right;
  margin: 5px;
  @include respond-at($bp-small) {
    margin: 10px;
  }
  @include respond-at($bp-med) {
    margin: 15px;
  }
  @include respond-at($bp-large) {
    margin: 30px;
  }
}

.pageTagline {
}
.pageTopImage {
  height: 20vh;
  width: 100%;
  // background-color: $cardColor1;
}

.infoCard {
  padding: 10px;
  text-align: center;
  // background-color: blue;
  color: black;

  @include respond-at($bp-small) {
    padding: 20px;
  }
  @include respond-at($bp-med) {
    padding: 40px;
  }
  @include respond-at($bp-large) {
    padding: 50px;
  }
  &:nth-of-type(6n) {
    background-color: $cardColor1;
    box-shadow: 10px 10px $cardColor2;
    & a:hover {
      color: $cardColor2;
    }
    // color: black;
  }
  &:nth-of-type(6n + 1) {
    background-color: $cardColor2;
    box-shadow: 10px 10px $cardColor3;
    & a:hover {
      color: $cardColor3;
    }
    // color: white;
  }
  &:nth-of-type(6n + 2) {
    background-color: $cardColor3;
    box-shadow: 10px 10px $cardColor4;
    & a:hover {
      color: $cardColor4;
    }
    // color: white;
  }
  &:nth-of-type(6n + 3) {
    background-color: $cardColor4;
    box-shadow: 10px 10px $cardColor5;
    & a:hover {
      color: $cardColor5;
    }
    // color: white;
  }
  &:nth-of-type(6n + 4) {
    background-color: $cardColor5;
    box-shadow: 10px 10px $cardColor6;
    & a:hover {
      color: $cardColor6;
    }
    // color: black;
  }
  &:nth-of-type(6n + 5) {
    background-color: $cardColor6;
    box-shadow: 10px 10px $cardColor1;
    & a:hover {
      color: $cardColor1;
    }
    // color: black;
  }
}
